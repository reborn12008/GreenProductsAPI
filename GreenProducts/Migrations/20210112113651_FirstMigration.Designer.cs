// <auto-generated />
using System;
using GreenProducts.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GreenProducts.Migrations
{
    [DbContext(typeof(GreenDbContext))]
    [Migration("20210112113651_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("GreenProducts.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("GreenProducts.Models.ImpactCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SeverityLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ImpactCategories");
                });

            modelBuilder.Entity("GreenProducts.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CurrentCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentImpactId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CurrentCategoryId");

                    b.HasIndex("CurrentImpactId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("GreenProducts.Models.Supermarket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Supermarkets");
                });

            modelBuilder.Entity("GreenProducts.Models.Supermarket_Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CurrentProductId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentSupermarketId")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CurrentProductId");

                    b.HasIndex("CurrentSupermarketId");

                    b.ToTable("Supermarket_Products");
                });

            modelBuilder.Entity("GreenProducts.Models.Product", b =>
                {
                    b.HasOne("GreenProducts.Models.Category", "CurrentCategory")
                        .WithMany()
                        .HasForeignKey("CurrentCategoryId");

                    b.HasOne("GreenProducts.Models.ImpactCategory", "CurrentImpact")
                        .WithMany()
                        .HasForeignKey("CurrentImpactId");

                    b.Navigation("CurrentCategory");

                    b.Navigation("CurrentImpact");
                });

            modelBuilder.Entity("GreenProducts.Models.Supermarket_Product", b =>
                {
                    b.HasOne("GreenProducts.Models.Product", "CurrentProduct")
                        .WithMany()
                        .HasForeignKey("CurrentProductId");

                    b.HasOne("GreenProducts.Models.Supermarket", "CurrentSupermarket")
                        .WithMany()
                        .HasForeignKey("CurrentSupermarketId");

                    b.Navigation("CurrentProduct");

                    b.Navigation("CurrentSupermarket");
                });
#pragma warning restore 612, 618
        }
    }
}
